[{"/home/gavril.hasmasan/Desktop/redux-typescript/src/index.tsx":"1","/home/gavril.hasmasan/Desktop/redux-typescript/src/App/App.tsx":"2"},{"size":223,"mtime":1606298830508,"results":"3","hashOfConfig":"4"},{"size":852,"mtime":1606303208052,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h292o9",{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/home/gavril.hasmasan/Desktop/redux-typescript/src/index.tsx",[],"/home/gavril.hasmasan/Desktop/redux-typescript/src/App/App.tsx",["11","12","13"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { computeHeadingLevel } from \"@testing-library/react\";\n\nfunction App() {\n  const [state, setstate] = useState<Array<{}>>([]);\n\n  const fetch = () => {\n    const url = \"http://localhost:3001/events\";\n    const req = async () => {\n      const response = await axios.get(url);\n      const data = await response.data;\n      setstate([...state, ...data]);\n    };\n    return req();\n  };\n\n  const compune = (state: any) => {\n    return state.map((item: any, index: number) => (\n      <div key={item.index}>\n        <h2>{item.title}</h2>\n        <img src={item.img} />\n      </div>\n    ));\n  };\n\n  useEffect(() => {\n    console.log(fetch());\n    return () => {};\n  }, []);\n  return (\n    <div>\n      {compune(state)}\n      <div></div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":3,"column":10,"nodeType":"16","messageId":"17","endLine":3,"endColumn":29},{"ruleId":"18","severity":1,"message":"19","line":22,"column":9,"nodeType":"20","endLine":22,"endColumn":31},{"ruleId":"21","severity":1,"message":"22","line":30,"column":6,"nodeType":"23","endLine":30,"endColumn":8,"suggestions":"24"},"@typescript-eslint/no-unused-vars","'computeHeadingLevel' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["25"],{"desc":"26","fix":"27"},"Update the dependencies array to be: [fetch]",{"range":"28","text":"29"},[746,748],"[fetch]"]